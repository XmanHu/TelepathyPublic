# .NET Desktop
# Build and run tests for .NET Desktop or Windows classic desktop solutions.
# Add steps that publish symbols, save build artifacts, and more:
# https://docs.microsoft.com/azure/devops/pipelines/apps/windows/dot-net

name: 1.0.0$(rev:.r)

trigger:
- dev

variables:
  solution: 'Telepathy.sln'
  buildPlatform: 'Any CPU'
  buildConfiguration: 'Release'
  TemplateName: 'Telepathy_$(Build.BuildNumber)'

stages:
- stage: Build
  jobs:
  - job: UnitTestPublish
    pool:
      vmImage: 'windows-latest'

    steps:
    - task: NuGetToolInstaller@1

    - task: Assembly-Info-NetFramework@2
      inputs:
        Path: '$(Build.SourcesDirectory)'
        FileNames: |
          **\AssemblyInfo.cs
          **\AssemblyInfo.vb
        InsertAttributes: true
        FileEncoding: 'auto'
        WriteBOM: false
        Product: 'Microsoft (R) Telepathy'
        Company: 'Microsoft Corporation'
        Copyright: 'Copyright (c) Microsoft Corporation. All rights reserved.'
        VersionNumber: '$(Build.BuildNumber)'
        FileVersionNumber: '$(Build.BuildNumber)'

    - task: NuGetCommand@2
      inputs:
        command: 'restore'
        restoreSolution: '$(solution)'
        feedsToUse: 'select'

    - task: VSBuild@1
      inputs:
        solution: '$(solution)'
        platform: '$(buildPlatform)'
        configuration: '$(buildConfiguration)'
        maximumCpuCount: true
        msbuildArchitecture: 'x64'

    - task: CmdLine@2
      inputs:
        script: |
          sqllocaldb create MSSQLLocalDB
          sqllocaldb start MSSQLLocalDB
          sqllocaldb info MSSQLLocalDB
      
          "C:\Program Files (x86)\Microsoft SDKs\Azure\Storage Emulator\AzureStorageEmulator.exe" start

    - task: VSTest@2
      inputs:
        testSelector: 'testAssemblies'
        testAssemblyVer2: |
          **\*UnitTest*.dll
          !**\*TestAdapter.dll
          !**\obj\**
        searchFolder: '$(System.DefaultWorkingDirectory)'
        platform: '$(buildPlatform)'
        configuration: '$(buildConfiguration)'
        codeCoverageEnabled: true

    - task: PowerShell@2
      displayName: CoreLayerSmokeTest
      inputs:
        filePath: '$(System.DefaultWorkingDirectory)\test\CoreLayerSmokeTest.ps1'
      timeoutInMinutes: 5
      
    - task: PublishPipelineArtifact@1
      inputs:
        targetPath: 'test\E2ETest\BvtTest'
        artifact: 'BVTArtifact'
        
    - task: PublishPipelineArtifact@1
      inputs:
        targetPath: '$(System.DefaultWorkingDirectory)\deploy\azuredeploy.nightly.json'
        artifact: 'deployFile'
    
    - task: PowerShell@2
      inputs:
        filePath: 'create-artifacts.ps1'
        errorActionPreference: 'continue'

    - task: CopyFiles@2
      inputs:
        SourceFolder: 'artifacts'
        Contents: '**'
        TargetFolder: '$(Build.ArtifactStagingDirectory)'
        OverWrite: true

    - task: EsrpCodeSigning@1
      displayName: 'Sign assemblies'
      condition: and(succeeded(), or(eq(variables['Build.SourceBranch'], 'refs/heads/master'), eq(variables['Build.SourceBranch'], 'refs/heads/dev')))
      inputs:
        ConnectedServiceName: 'ESRP CodeSign'
        FolderPath: '$(Build.ArtifactStagingDirectory)'
        Pattern: '*.dll,*.exe'
        signConfigType: 'inlineSignParams'
        inlineOperation: |
          [
            {
              "KeyCode": "CP-230012",
              "OperationCode": "SigntoolSign",
              "Parameters": {
                "OpusName": "Microsoft",
                "OpusInfo": "http://www.microsoft.com",
                "FileDigest": "/fd \"SHA256\"",
                "PageHash": "/NPH",
                "TimeStamp": "/tr \"http://rfc3161.gtm.corp.microsoft.com/TSS/HttpTspServer\" /td sha256"
              },
              "ToolName": "sign",
              "ToolVersion": "1.0"
            },
            {
              "KeyCode": "CP-230012",
              "OperationCode": "SigntoolVerify",
              "Parameters": {},
              "ToolName": "sign",
              "ToolVersion": "1.0"
            }
          ]
        SessionTimeout: '60'
        MaxConcurrency: '50'
        MaxRetryAttempts: '5'   

    - task: PublishBuildArtifacts@1
      inputs:
        PathtoPublish: '$(Build.ArtifactStagingDirectory)'
        ArtifactName: 'drop'
        publishLocation: 'Container'    

    - task: ArchiveFiles@2
      inputs:
        rootFolderOrFile: '$(Build.ArtifactStagingDirectory)'
        includeRootFolder: false
        archiveType: 'zip'
        archiveFile: '$(Build.ArtifactStagingDirectory)/telepathy.zip'
        replaceExistingArchive: true

    - task: PublishBuildArtifacts@1
      inputs:
        PathtoPublish: '$(Build.ArtifactStagingDirectory)/telepathy.zip'
        ArtifactName: 'archive'
        publishLocation: 'Container'

    - task: AzureFileCopy@3
      inputs:
        SourcePath: 'artifacts'
        azureSubscription: 'BigCompS-Int1(d50b6b31-cd2f-4c93-83f1-b1acdd32504c)'
        Destination: 'AzureBlob'
        storage: 'soaserviceartifactci'
        ContainerName: 'telepathy/$(Build.BuildNumber)'

    - task: AzureFileCopy@3
      inputs:
        SourcePath: 'artifacts/$(buildConfiguration)/registration'
        azureSubscription: 'BigCompS-Int1(d50b6b31-cd2f-4c93-83f1-b1acdd32504c)'
        Destination: 'AzureBlob'
        storage: 'soaruntimestorage'
        ContainerName: 'service-registration'
        
    - task: AzureFileCopy@3
      inputs:
        SourcePath: 'artifacts/$(buildConfiguration)/ccpservicehost'
        azureSubscription: 'BigCompS-Int1(d50b6b31-cd2f-4c93-83f1-b1acdd32504c)'
        Destination: 'AzureBlob'
        storage: 'soaruntimestorage'
        ContainerName: 'runtime/ccpservicehost'

    - task: AzureFileCopy@3
      inputs:
        SourcePath: 'artifacts/$(buildConfiguration)/echosvclib'
        azureSubscription: 'BigCompS-Int1(d50b6b31-cd2f-4c93-83f1-b1acdd32504c)'
        Destination: 'AzureBlob'
        storage: 'soaruntimestorage'
        ContainerName: 'service-assembly/ccpechosvc'

    - task: EsrpCodeSigning@1
      displayName: 'Sign SDK assemblies'
      condition: and(succeeded(), or(eq(variables['Build.SourceBranch'], 'refs/heads/master'), eq(variables['Build.SourceBranch'], 'refs/heads/dev')))
      inputs:
        ConnectedServiceName: 'ESRP CodeSign'
        FolderPath: 'src/soa/SessionAPI/bin/$(buildConfiguration)'
        Pattern: '*.dll,*.exe'
        signConfigType: 'inlineSignParams'
        inlineOperation: |
          [
            {
              "KeyCode": "CP-230012",
              "OperationCode": "SigntoolSign",
              "Parameters": {
                "OpusName": "Microsoft",
                "OpusInfo": "http://www.microsoft.com",
                "FileDigest": "/fd \"SHA256\"",
                "PageHash": "/NPH",
                "TimeStamp": "/tr \"http://rfc3161.gtm.corp.microsoft.com/TSS/HttpTspServer\" /td sha256"
              },
              "ToolName": "sign",
              "ToolVersion": "1.0"
            },
            {
              "KeyCode": "CP-230012",
              "OperationCode": "SigntoolVerify",
              "Parameters": {},
              "ToolName": "sign",
              "ToolVersion": "1.0"
            }
          ]
        SessionTimeout: '60'
        MaxConcurrency: '50'
        MaxRetryAttempts: '5'
        
    - task: NuGetCommand@2
      displayName: 'Pack SDK Nuget Package'
      inputs:
        command: 'pack'
        packagesToPack: '**/Session.nuspec'
        versioningScheme: 'byBuildNumber'
        includeSymbols: true

    - task: EsrpCodeSigning@1
      displayName: 'Sign Nuget Package'
      condition: and(succeeded(), or(eq(variables['Build.SourceBranch'], 'refs/heads/master'), eq(variables['Build.SourceBranch'], 'refs/heads/dev')))
      inputs:
        ConnectedServiceName: 'ESRP CodeSign'
        FolderPath: '$(Build.ArtifactStagingDirectory)'
        Pattern: '*.nupkg'
        signConfigType: 'inlineSignParams'
        inlineOperation: |
          [
            {
              "KeyCode" : "CP-401405",
              "OperationCode" : "NuGetSign",
              "Parameters" : {},
              "ToolName" : "sign",
              "ToolVersion" : "1.0"
            },
            {
              "KeyCode" : "CP-401405",
              "OperationCode" : "NuGetVerify",
              "Parameters" : {},
              "ToolName" : "sign",
              "ToolVersion" : "1.0"
            }
          ]
        SessionTimeout: '60'
        MaxConcurrency: '50'
        MaxRetryAttempts: '5'

    - task: PublishPipelineArtifact@1
      inputs:
        targetPath: '$(Build.ArtifactStagingDirectory)/microsoft.telepathy.session.$(Build.BuildNumber).nupkg'
        artifact: 'sdk_nuget'
        publishLocation: 'pipeline'
        
    - task: NuGetCommand@2
      displayName: 'Publish SDK to Internal Source'
      inputs:        
        command: 'push'
        packagesToPush: '$(Build.ArtifactStagingDirectory)/**/*.nupkg;!$(Build.ArtifactStagingDirectory)/**/*.symbols.nupkg'
        nuGetFeedType: 'internal'
        publishVstsFeed: 'd967b926-1ec4-4fdb-8fb7-4a0dd25734dd'
        allowPackageConflicts: true

    - task: NuGetCommand@2
      displayName:  'Publish SDK to Public Source'
      condition: and(succeeded(), or(eq(variables['Build.SourceBranch'], 'refs/heads/master'), eq(variables['Build.SourceBranch'], 'refs/heads/dev')))
      inputs:
        command: 'push'
        packagesToPush: '$(Build.ArtifactStagingDirectory)/**/*.nupkg;!$(Build.ArtifactStagingDirectory)/**/*.symbols.nupkg'
        nuGetFeedType: 'internal'
        publishVstsFeed: '32d89ced-58e3-4e1d-835e-b6e22ec7cc80/50c2f425-4633-4238-b8d2-29ced314cb71'
        allowPackageConflicts: false

- stage: Deploy       
  dependsOn: Build 
  jobs:
  - job: HNDeployment
    pool:
      vmImage: 'windows-latest'
    steps:
    - checkout: none
    
    - task: DownloadPipelineArtifact@2
      inputs: 
        buildType: 'current'
        artifactName: 'deployFile'
        targetPath: '$(System.DefaultWorkingDirectory)\deploy'      
        
    - task: AzureResourceManagerTemplateDeployment@3
      inputs:
        deploymentScope: 'Resource Group'
        ConnectedServiceName: 'BigCompS-Int1 (d50b6b31-cd2f-4c93-83f1-b1acdd32504c)'
        subscriptionName: 'd50b6b31-cd2f-4c93-83f1-b1acdd32504c'
        action: 'Create Or Update Resource Group'
        resourceGroupName: '$(TemplateName)'
        location: 'Japan East'
        templateLocation: 'Linked artifact'
        csmFile: '**\azuredeploy.nightly.json'
        #overrideParameters: '-telepathyVMName "Telepathy$(Build.BuildID)" -telepathyVMAdminUserName $(VMadmin) -telepathyVMAdminPassword $(VMpwd) -vnetName $(VnetName)  -subnetName "default" -batchPoolVMSize "STANDARD_A4_V2" -targetDedicatedNodes 15 -newOrExistingVnet "existing" -vnetResourceGroup $(VnetRGName) -nightlyBuildVersion $(Build.BuildNumber)'
        overrideParameters: '-telepathyVMName "Telepathy$(Build.BuildID)" -telepathyVMAdminUserName $(VMadmin) -telepathyVMAdminPassword $(VMpwd) -vnetName $(VnetName)  -subnetName "default" -newOrExistingBatchAccount "existing" -batchAccountsResourceGroup $(VnetRGName) -batchAccountsName $(BatchAccountName) -batchAccountsPoolName $(PoolName)  -targetDedicatedNodes 15 -newOrExistingVnet "existing" -vnetResourceGroup $(VnetRGName) -nightlyBuildVersion $(Build.BuildNumber)'
        deploymentMode: 'Complete'

- stage: BVTTest
  dependsOn: Deploy
  jobs:
  - job: BVTTest
    pool: 'Azure Agent'

    steps:
    - checkout: none
    - task: PowerShell@2
      inputs:
        targetType: 'inline'
        script: '[environment]::setenvironmentvariable("HNMachine", "Telepathy$(Build.BuildID)", "User")'
        
    - task: DownloadPipelineArtifact@2
      inputs: 
        buildType: 'current'
        artifactName: 'BVTArtifact'
        targetPath: '$(System.DefaultWorkingDirectory)\BVT'
        
    - task: VSTest@2
      inputs:
        testSelector: 'testAssemblies'
        testAssemblyVer2: |
          **\BvtTest.dll
          !**\*TestAdapter.dll
          !**\obj\**
        searchFolder: '$(System.DefaultWorkingDirectory)'
        platform: '$(buildPlatform)'
        configuration: '$(buildConfiguration)'
        codeCoverageEnabled: true
        
    - task: PowerShell@2
      inputs:
        targetType: 'inline'
        script: '[environment]::setenvironmentvariable("HNMachine", $null, "User")'        
        
  - job: CleanResource
    pool:
      vmImage: 'windows-latest'
    dependsOn: BvtTest
    steps:
    - checkout: none
    
    - task: AzureResourceManagerTemplateDeployment@3
      inputs:
        deploymentScope: 'Resource Group'
        ConnectedServiceName: 'BigCompS-Int1 (d50b6b31-cd2f-4c93-83f1-b1acdd32504c)'
        subscriptionName: 'd50b6b31-cd2f-4c93-83f1-b1acdd32504c'
        action: 'DeleteRG'
        resourceGroupName: '$(TemplateName)'
        location: 'Japan East'
