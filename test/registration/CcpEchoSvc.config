<?xml version="1.0" encoding="utf-8" ?>
<configuration>

  <configSections>

    <!--Register service's custom configruation sections and group-->
    <sectionGroup name="microsoft.Hpc.Session.ServiceRegistration"
                  type="Microsoft.Telepathy.Session.Configuration.ServiceRegistration, Microsoft.Telepathy.Session, Version=5.0.0.0">
      <section name="service"
               type="Microsoft.Telepathy.Session.Configuration.ServiceConfiguration, Microsoft.Telepathy.Session, Version=5.0.0.0"
               allowDefinition="Everywhere"
               allowExeDefinition="MachineToApplication"
               />
      <!--Below is a sample to config customized host. It should be used with microsoft.Hpc.Session.ServiceRegistration/host.
      <section name="host"
         type="Microsoft.Telepathy.Session.Configuration.HostConfiguration, Microsoft.Telepathy.Session, Version=5.0.0.0"
         allowDefinition="Everywhere"
         allowExeDefinition="MachineToApplication"
               />
      -->
    </sectionGroup>

    <sectionGroup name="microsoft.Hpc.Broker"
                  type="Microsoft.Telepathy.Session.Configuration.BrokerConfigurations, Microsoft.Telepathy.Session, Version=5.0.0.0">
      <section name="monitor"
               type="Microsoft.Telepathy.Session.Configuration.BrokerMonitorConfiguration, Microsoft.Telepathy.Session, Version=5.0.0.0"
               allowDefinition="Everywhere"
               allowExeDefinition="MachineToApplication"
               />
      <section name="services"
               type="Microsoft.Telepathy.Session.Configuration.BrokerServicesConfiguration, Microsoft.Telepathy.Session, Version=5.0.0.0"
               allowDefinition="Everywhere"
               allowExeDefinition="MachineToApplication"
               />
      <section name="loadBalancing"
               type="Microsoft.Telepathy.Session.Configuration.LoadBalancingConfiguration, Microsoft.Telepathy.Session, Version=5.0.0.0"
               allowDefinition="Everywhere"
               allowExeDefinition="MachineToApplication"
               />
      <section name="customBroker"
         type="Microsoft.Telepathy.Session.Configuration.CustomBrokerRegistration, Microsoft.Telepathy.Session, Version=5.0.0.0"
         allowDefinition="Everywhere"
         allowExeDefinition="MachineToApplication"
               />
    </sectionGroup>

  </configSections>

  <microsoft.Hpc.Session.ServiceRegistration>
    <service assembly="%REPO_ROOT%\src\soa\EchoSvcLib\bin\Release\EchoSvcLib.dll"
             contract="Microsoft.Telepathy.EchoSvcLib.IEchoSvc"
             type="Microsoft.Telepathy.EchoSvcLib.EchoSvc"
             includeExceptionDetailInFaults="true"
             maxConcurrentCalls="0"
             maxMessageSize="655360"
             serviceInitializationTimeout="60000"
             serviceHostIdleTimeout="3600000"
             serviceHangTimeout="-1"
             enableMessageLevelPreemption="true"
             soaDiagTraceLevel="Off">
      <!--Below is a sample for adding environment variables to the service-->
      <environmentVariables>
        <add name="myname1" value="myvalue1"/>
        <add name="myname2" value="myvalue2"/>
      </environmentVariables>
    </service>
    <!--Below is a sample to config customized host
       <host hostType="Customize" exeFileName="%CCP_DATA%\ServiceRegistration\ServiceBinary.exe" />
     -->
  </microsoft.Hpc.Session.ServiceRegistration>

  <!--Service broker's configuration-->
  <microsoft.Hpc.Broker>
    <!--configuration to control broker's monitoring behavior-->
    <monitor messageThrottleStartThreshold="409600"
             messageThrottleStopThreshold="307200"
             loadSamplingInterval="1000"
             allocationAdjustInterval="5000"
             clientIdleTimeout="300000"
             sessionIdleTimeout="300000"
             statusUpdateInterval="3000"
             clientBrokerHeartbeatInterval="20000"
             clientBrokerHeartbeatRetryCount="3" />
    <services>
      <!--Address templates used for Broker service-->
      <brokerServiceAddresses>
        <!--
            Two configuration is done to enable broker listen on this URI:
            1. Port 9091 is added to firewall exceptions
            2. Users group is allowed to register with NetTcp port sharing service
        -->
        <add baseAddress="net.tcp://localhost:9091/Broker"/>
        <!--Before using HTTP transport, make sure:
                1. The HTTP URI is correctly reserved for the user who is going to starts the session 
                   (using "netsh http add urlacl")and evaluate risk of allowing the user to listen on that URL
                2. Open the port in firewall
        -->
        <add baseAddress="http://localhost/Broker"/>
        <!--Before using HTTPS transport, make sure 
                1. The HTTPS URI is correctly reserved for the user who is going to starts the session 
                   (using "netsh http add urlacl") and evaluate risk of allowing the user to listen on that URL
                2. Open the port in firewall
                3. Valid certificate is installed for the machine
                4. the certificate is registered with HTTP listener ("netsh http add sslcert")
        -->
        <add baseAddress="https://localhost/Broker"/>
      </brokerServiceAddresses>
    </services>
    <loadBalancing messageResendLimit="3"
                   serviceRequestPrefetchCount="1"
                   serviceOperationTimeout="86400000"
                   endpointNotFoundRetryPeriod="10000"
                   dispatcherCapacityInGrowShrink="0"/>
    <!--<customBroker executive="C:\SampleBroker.exe">
      <environmentVariables>
        <add name="myname1" value="myvalue1"/>
        <add name="myname2" value="myvalue2"/>
      </environmentVariables>
    </customBroker>-->
  </microsoft.Hpc.Broker>

  <system.serviceModel>
    <bindings>
      <netTcpBinding>
        <!--binding used by broker's front end service with security-->
        <binding name="Microsoft.Hpc.SecureNetTcpBrokerBinding" portSharingEnabled="true" closeTimeout="0:00:05" maxConnections="1000">
          <security mode="Transport"/>
        </binding>

        <!--binding used by broker's front end service with no security-->
        <binding name="Microsoft.Hpc.UnsecureNetTcpBrokerBinding" portSharingEnabled="true" closeTimeout="0:00:05" maxConnections="1000">
          <security mode="None"/>
        </binding>

        <!--binding used by broker's backend-->
        <binding name="Microsoft.Hpc.BackEndBinding" maxConnections="1000">
          <!--for non domain joined compute nodes, the security mode should be None-->
          <security mode="Transport">
            <transport clientCredentialType="Windows" protectionLevel="None"/>
          </security>
        </binding>
      </netTcpBinding>
      <netHttpsBinding>
        <!--binding used by broker's front end service with security-->
        <binding name ="Microsoft.Hpc.SecureNetHttpsBrokerBinding" closeTimeout="0:00:05">
          <security mode="TransportWithMessageCredential">
            <message clientCredentialType="UserName"/>
            <transport clientCredentialType="None"/>
          </security>
          <webSocketSettings transportUsage="Always"/>
        </binding>
      </netHttpsBinding>
      <netHttpBinding>
        <!--binding used by broker's front end service with no security-->
        <binding name ="Microsoft.Hpc.UnsecureNetHttpBrokerBinding" closeTimeout="0:00:05">
          <security mode="None">
          </security>
          <webSocketSettings transportUsage="Always"/>
        </binding>
      </netHttpBinding>
      <basicHttpBinding>
        <!--binding used by broker's front end service with security-->
        <binding name="Microsoft.Hpc.SecureHttpBrokerBinding" closeTimeout="0:00:05">
          <security mode="TransportWithMessageCredential">
            <message clientCredentialType="UserName"/>
            <transport clientCredentialType="None"/>
          </security>
        </binding>

        <!--binding used by broker's front end service with no security-->
        <binding name="Microsoft.Hpc.UnsecureHttpBrokerBinding" closeTimeout="0:00:05">
          <security mode="None"/>
        </binding>
      </basicHttpBinding>

      <customBinding>
        <binding name="Microsoft.Hpc.UnsecureCustomBrokerBinding">
          <tcpTransport portSharingEnabled="true"></tcpTransport>
        </binding>
      </customBinding>
    </bindings>
  </system.serviceModel>

  <system.diagnostics>
    <sources>
      <!--
      <source name="Microsoft.Hpc.HpcServiceHosting" switchValue="All">
        <listeners>
          <add name="Console" />
        </listeners>
      </source>
       -->
      <source name="HpcSoa" switchValue="All">
        <listeners>
          <remove name="Default" />
          <add name="Console" />
        </listeners>
      </source>
    </sources>
    <sharedListeners>
      <add type="System.Diagnostics.ConsoleTraceListener, System, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089"
        name="Console" traceOutputOptions="DateTime">
        <filter type="" />
      </add>
      <!--
      Write hpc trace to specified log file. Log files are separated by subfolder named by job id,
      and log file is named by task instance id. Each file is 1MB, and upper limit for each task is 1000MB
      -->
	  <!--
      <add type="Microsoft.Hpc.Trace.HpcTraceListener, Microsoft.Hpc.Trace"
        name="SoaListener"
        initializeData="%CCP_LOGROOT_USR%SOA\HpcServiceHost\%CCP_JOBID%\%CCP_TASKINSTANCEID%\Host"
        FileSizeMB="1"
        MaxAllowedDiskUsageInMB="1000" />
		-->
    </sharedListeners>
	
    <trace autoflush="true" useGlobalLock="false">
      <listeners>
        <remove name="Default" />
        <add name="Console" />
      </listeners>
    </trace>
  </system.diagnostics>
</configuration>
